{"version":3,"sources":["components/LoadingComponent.js","components/shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/ContactComponent.js","components/HomeComponent.js","components/AboutComponent.js","redux/feedbackform.js","redux/ActionTypes.js","redux/ActionCreator.js","components/MainComponent.js","redux/dishes.js","redux/leaders.js","redux/comments.js","redux/promotions.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","className","baseUrl","RenderMenu","dishes","map","dish","RenderDish","Card","style","cursor","to","id","CardImg","src","image","alt","name","CardHeader","CardTitle","Menu","isLoading","errMess","Breadcrumb","BreadcrumbItem","active","maxLength","len","val","length","RenderComments","comments","comment","in","key","author","Intl","DateTimeFormat","year","month","day","format","Date","parse","date","transformProps","exitTransform","CardBody","CardText","description","CommentForm","props","toggelModal","setState","isModalOpen","state","handleSubmit","values","postComment","dishId","rating","Fragment","Button","type","onClick","this","Modal","fade","isOpen","toggle","ModalHeader","charcode","ModalBody","onSubmit","Row","Label","htmlFor","Col","sm","select","defaultValue","model","value","text","validators","minLength","show","messages","textarea","rows","Component","DishDetail","Header","isNavOpen","toggleNav","bind","toggleModal","handleLogin","event","alert","JSON","stringify","Username","username","Password","password","Remember","remember","checked","preventDefault","Navbar","dark","expand","NavbarBrand","href","height","width","NavbarToggler","Collapse","navbar","Nav","NavItem","outline","Jumbotron","Form","FormGroup","row","Input","innerRef","input","check","Footer","required","isNumber","isNaN","Number","validEmail","test","Contact","postFeedback","resetFeedback","role","md","placeholder","size","offset","checkbox","selected","color","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promotionsLoading","promotionsErrMess","leader","leadersLoading","leadersErrMess","RenderLeaders","leaders","Media","tag","left","top","body","heading","About","title","list","initialFeedback","firstname","lastname","email","telnum","agree","contactType","message","feedbackForm","action","payload","addDishes","dishesFailed","addComments","commentsFailed","addLeaders","leadersFailed","promosLoading","addPromos","promos","promosFailed","feedbackPosted","feedback","feedbackFailed","Main","DishWithId","match","filter","parseInt","params","commentsErrMess","HomePage","featured","promotions","promo","fetchDishes","fetchComments","fetchPromos","fetchLeaders","TransitionGroup","CSSTransition","location","classNames","timeout","path","component","exact","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","credentials","then","response","ok","json","Error","status","statusText","error","addComment","catch","err","console","log","actions","reset","feed","res","initialState","Dishes","Leaders","Comments","concat","Promotions","store","createStore","combineReducers","createForms","applyMiddleware","thunk","logger","App","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"+TAEaA,EAAQ,WACjB,OACI,yBAAKC,UAAU,yCACX,0BAAMA,UAAU,oDAChB,uBAAGA,UAAU,gBAAb,gBCNCC,EAAQ,wCCOrB,SAASC,EAAT,GAuBI,OAvByB,EAARC,OACCC,KAAI,SAAAC,GAClB,OAgBI,yBAAKL,UAAU,mCACX,kBAACM,EAAD,CAAYD,KAAMA,QAOlC,SAASC,EAAT,GAA4B,IAAPD,EAAM,EAANA,KAClB,OACS,kBAACE,EAAA,EAAD,CAAMP,UAAU,sBAAuBQ,MAAO,CAACC,OAAO,YAClD,kBAAC,IAAD,CAAMC,GAAE,gBAAWL,EAAKM,KACpB,kBAACC,EAAA,EAAD,CAASC,IAAKZ,EAAQI,EAAKS,MAAOC,IAAKV,EAAKW,OAG5C,kBAACC,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACI,4BAAKb,EAAKW,UAwDvBG,MAzCf,YAA0C,IAA3BhB,EAA0B,EAA1BA,OAAOiB,EAAmB,EAAnBA,UAAUC,EAAS,EAATA,QAC5B,OAAGD,EAEK,yBAAKpB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKRqB,EAEA,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,eAAeqB,KAOrC,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACsB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMb,GAAG,SAAT,SAChB,kBAACa,EAAA,EAAD,CAAgBC,QAAM,GAAtB,SAEJ,yBAAKxB,UAAU,sBACX,oCACA,+BAGR,yBAAKA,UAAU,8BACX,kBAACE,EAAD,CAAYC,OAAQA,O,gGCjFlCsB,EAAU,SAACC,GAAD,OAAO,SAACC,GAAD,OAASA,GAAOA,EAAIC,QAAQF,IAEnD,SAASG,EAAT,GAWI,OAX+B,EAAVC,SACW1B,KAAI,SAAA2B,GAChC,OACI,kBAAC,OAAD,CAAMC,IAAE,GACJ,wBAAIC,IAAKF,EAAQpB,IACb,2BAAIoB,EAAQA,SACZ,iCAAOA,EAAQG,OAAf,MAA0B,IAAIC,KAAKC,eAAe,QAAS,CAAEC,KAAM,UAAWC,MAAO,QAASC,IAAK,YAAYC,OAAO,IAAIC,KAAKA,KAAKC,MAAMX,EAAQY,cAQtK,SAASrC,EAAT,GAA4B,IAAPD,EAAM,EAANA,KACjB,OACI,yBAAKL,UAAU,uBACf,kBAAC,gBAAD,CAAegC,IAAE,EAACY,eAAgB,CAACC,cAAe,gCAC9C,kBAACtC,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAASC,IAAKZ,EAAQI,EAAKS,MAAOC,IAAKV,EAAKW,OACxC,kBAAC8B,EAAA,EAAD,KACI,kBAAC5B,EAAA,EAAD,KACI,4BAAKb,EAAKW,OAEd,kBAAC+B,EAAA,EAAD,KACK1C,EAAK2C,iB,IAyD5BC,E,kDACF,WAAYC,GAAO,IAAD,8BACd,cAAMA,IAMVC,YAAY,WACR,EAAKC,SAAS,CAACC,aAAc,EAAKC,MAAMD,eAR1B,EAWlBE,aAAa,SAACC,GACV,EAAKN,MAAMO,YAAY,EAAKP,MAAMQ,OAAOF,EAAOG,OAAOH,EAAOxC,KAAKwC,EAAOzB,SAC1E,EAAKoB,eAXL,EAAKG,MAAM,CACPD,aAAa,GAHH,E,qDAiBd,OACI,kBAAC,IAAMO,SAAP,KACI,yBAAK5D,UAAU,0CACX,kBAAC6D,EAAA,EAAD,CAAQC,KAAK,SAAS9D,UAAU,qCAAqC+D,QAASC,KAAKb,aAC/E,0BAAMnD,UAAU,iBADpB,oBAIJ,6BACI,kBAACiE,EAAA,EAAD,CAAOC,MAAI,EAACC,OAAQH,KAAKV,MAAMD,YAAae,OAAQJ,KAAKb,aACrD,kBAACkB,EAAA,EAAD,CAAaC,SAAS,UAAStE,UAAU,sBAAsBoE,OAAQJ,KAAKb,aAA5E,WAGA,kBAACoB,EAAA,EAAD,CAAWvE,UAAU,OACjB,kBAAC,YAAD,CAAWwE,SAAUR,KAAKT,cACtB,kBAACkB,EAAA,EAAD,CAAKzE,UAAU,cACX,kBAAC0E,EAAA,EAAD,CAAO1E,UAAU,SAAS2E,QAAQ,UAAlC,UACA,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,UAAQC,OAAT,CAAgBC,aAAa,IAAI/E,UAAU,eAAegF,MAAM,UAChErE,GAAG,SAASK,KAAK,UACb,4BAAQiE,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,KACA,4BAAQA,MAAM,KAAd,QAIZ,kBAACR,EAAA,EAAD,CAAKzE,UAAU,cACX,kBAAC0E,EAAA,EAAD,CAAO1E,UAAU,SAAS2E,QAAQ,QAAlC,aACA,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,UAAQK,KAAT,CAAclF,UAAU,eAAegF,MAAM,QAC7CrE,GAAG,OAAOK,KAAK,OACfmE,WAAY,CAACC,WAvIpC1D,EAuIwD,EAvIlD,SAACC,GAAD,OAAQA,GAAOA,EAAIC,QAAQF,IAuI0BD,UAAWA,EAAU,OAEzD,kBAAC,SAAD,CACAzB,UAAU,cACVqF,KAAK,UACLL,MAAM,QACNM,SAAU,CACNF,UAAW,uCACX3D,UAAW,2CAMvB,kBAACgD,EAAA,EAAD,CAAKzE,UAAU,cACX,kBAAC0E,EAAA,EAAD,CAAO1E,UAAU,SAAS2E,QAAQ,WAAlC,WACA,kBAACC,EAAA,EAAD,CAAKC,GAAI,IACL,kBAAC,UAAQU,SAAT,CAAkBvF,UAAU,eAAegF,MAAM,WACjDrE,GAAG,UAAUK,KAAK,UAClBwE,KAAK,QAIb,kBAACf,EAAA,EAAD,CAAKzE,UAAU,qCACX,kBAAC6D,EAAA,EAAD,CAAQC,KAAK,SAAS9D,UAAU,kBAAhC,gBA/JpB,IAAC0B,M,GAqFS+D,aAqFXC,EArIf,SAAoBxC,GACZ,OAAGA,EAAM9B,UAEL,yBAAKpB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKJkD,EAAM7B,QAEN,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,eAAekD,EAAM7B,WAK9B,OAAb6B,EAAM7C,KAEN,yBAAKL,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACsB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMb,GAAG,SAAT,SAChB,kBAACa,EAAA,EAAD,CAAgBC,QAAM,GAAE0B,EAAM7C,KAAKW,QAG3C,yBAAKhB,UAAU,8BACX,kBAAC,EAAD,CAAYK,KAAM6C,EAAM7C,OACxB,yBAAKL,UAAU,uBACX,wBAAIA,UAAU,eAAd,YACI,kBAAC,UAAD,CAASgC,IAAE,GACP,wBAAIhC,UAAU,iBACd,kBAAC6B,EAAD,CAAgB6B,OAAQR,EAAM7C,KAAKM,GAAImB,SAAUoB,EAAMpB,SAAU2B,YAAaP,EAAMO,gBAG5F,kBAAC,EAAD,CAAaC,OAAQR,EAAM7C,KAAKM,GAAI8C,YAAaP,EAAMO,iBAOhE,M,0FC8BJkC,E,kDAlHb,WAAYzC,GAAO,IAAD,8BAChB,cAAMA,IACDI,MAAM,CACTsC,WAAU,EACVvC,aAAY,GAEd,EAAKwC,UAAU,EAAKA,UAAUC,KAAf,gBACf,EAAKC,YAAY,EAAKA,YAAYD,KAAjB,gBACjB,EAAKE,YAAY,EAAKA,YAAYF,KAAjB,gBARD,E,wDAYhB9B,KAAKZ,SAAS,CAACwC,WAAY5B,KAAKV,MAAMsC,c,oCAItC5B,KAAKZ,SAAS,CAACC,aAAcW,KAAKV,MAAMD,gB,kCAG9B4C,GACVjC,KAAK+B,cACLG,MAAMC,KAAKC,UAAU,CACnBC,SAAUrC,KAAKsC,SAASrB,MACxBsB,SAAUvC,KAAKwC,SAASvB,MACxBwB,SAAUzC,KAAK0C,SAASC,WAE1BV,EAAMW,mB,+BAGE,IAAD,OACP,OACA,kBAAC,IAAMhD,SAAP,KACE,kBAACiD,EAAA,EAAD,CAAQC,MAAI,EAACC,OAAO,MAClB,yBAAK/G,UAAU,aACb,kBAACgH,EAAA,EAAD,CAAaC,KAAK,KAChB,yBAAKpG,IAAI,yBAAyBE,IAAI,uBAAuBmG,OAAO,KAAKC,MAAM,QAEnF,kBAACC,EAAA,EAAD,CAAerD,QAASC,KAAK6B,YAC3B,kBAACwB,EAAA,EAAD,CAAUlD,OAAQH,KAAKV,MAAMsC,UAAW0B,QAAM,GAC5C,kBAACC,EAAA,EAAD,CAAKD,QAAM,EAACtH,UAAU,WACpB,kBAACwH,EAAA,EAAD,KACE,kBAAC,IAAD,CAASxH,UAAU,WAAWU,GAAG,SAC/B,0BAAMV,UAAU,yBADlB,SAIF,kBAACwH,EAAA,EAAD,KACE,kBAAC,IAAD,CAASxH,UAAU,WAAWU,GAAG,YAC/B,0BAAMV,UAAU,yBADlB,aAIF,kBAACwH,EAAA,EAAD,KACE,kBAAC,IAAD,CAASxH,UAAU,WAAWU,GAAG,SAC/B,0BAAMV,UAAU,yBADlB,SAIF,kBAACwH,EAAA,EAAD,KACE,kBAAC,IAAD,CAASxH,UAAU,WAAWU,GAAG,cAC/B,0BAAMV,UAAU,iCADlB,eAIF,kBAACwH,EAAA,EAAD,KACE,kBAAC3D,EAAA,EAAD,CAAQ4D,SAAO,EAAC1D,QAASC,KAAK+B,aAC5B,0BAAM/F,UAAU,wBADlB,eAQV,kBAAC0H,EAAA,EAAD,KACK,yBAAK1H,UAAU,aACX,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,mBACX,qDACA,yLAKhB,kBAACiE,EAAA,EAAD,CAAOC,MAAM,EAAMC,OAAQH,KAAKV,MAAMD,YAAae,OAAQJ,KAAK+B,aAC9D,kBAAC1B,EAAA,EAAD,CAAarE,UAAU,sBAAsBoE,OAAQJ,KAAK+B,aAA1D,UACA,kBAACxB,EAAA,EAAD,CAAWvE,UAAU,OACnB,kBAAC2H,EAAA,EAAD,KACE,kBAACC,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACnD,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAACmD,EAAA,EAAD,CAAOhE,KAAK,OAAOnD,GAAG,WAAWK,KAAK,WACtC+G,SAAU,SAACC,GAAD,OAAS,EAAK1B,SAAS0B,MAEnC,kBAACJ,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACnD,EAAA,EAAD,CAAOC,QAAQ,YAAf,YACA,kBAACmD,EAAA,EAAD,CAAOhE,KAAK,WAAWnD,GAAG,WAAWK,KAAK,WAC1C+G,SAAU,SAACC,GAAD,OAAS,EAAKxB,SAASwB,MAEnC,kBAACJ,EAAA,EAAD,CAAWC,KAAG,GACZ,kBAACD,EAAA,EAAD,CAAWK,OAAK,GACb,kBAACvD,EAAA,EAAD,CAAOuD,OAAK,GACV,kBAACH,EAAA,EAAD,CAAOhE,KAAK,WAAWnD,GAAG,WAAWK,KAAK,WAC1C+G,SAAU,SAACC,GAAD,OAAS,EAAKtB,SAASsB,KAFnC,iBAOL,kBAACJ,EAAA,EAAD,CAAWC,KAAG,EAAC7H,UAAU,0BACxB,kBAAC6D,EAAA,EAAD,CAAQC,KAAK,SAASC,QAASC,KAAKgC,YAAahG,UAAU,kBAA3D,UACA,kBAAC6D,EAAA,EAAD,CAAQC,KAAK,SAASC,QAASC,KAAK+B,YAAa/F,UAAU,kBAA3D,mB,GAzGOyF,aC6CNyC,MA/Cf,SAAgBhF,GACZ,OACA,yBAAKlD,UAAU,UACX,yBAAKA,UAAU,aACX,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,2BACX,qCACA,wBAAIA,UAAU,iBACV,4BAAI,kBAAC,IAAD,CAAMU,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,YAAT,UACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,SAAT,SACJ,4BAAI,kBAAC,IAAD,CAAMA,GAAG,cAAT,cAGZ,yBAAKV,UAAU,kBACX,2CACA,6DACqB,6BADrB,2BAEoB,6BAFpB,YAGK,6BACT,uBAAGA,UAAU,sBAJT,mBAIiD,6BACrD,uBAAGA,UAAU,oBALT,mBAK+C,6BACnD,uBAAGA,UAAU,yBANT,KAMsC,uBAAGiH,KAAK,6BAAR,wBAI1C,yBAAKjH,UAAU,qCACX,yBAAKA,UAAU,eACX,uBAAGA,UAAU,iCAAiCiH,KAAK,uBAAsB,uBAAGjH,UAAU,uBACtF,uBAAGA,UAAU,mCAAmCiH,KAAK,2CAA0C,uBAAGjH,UAAU,oBAC5G,uBAAGA,UAAU,mCAAmCiH,KAAK,+BAA8B,uBAAGjH,UAAU,oBAChG,uBAAGA,UAAU,kCAAkCiH,KAAK,uBAAsB,uBAAGjH,UAAU,mBACvF,uBAAGA,UAAU,iCAAiCiH,KAAK,uBAAsB,uBAAGjH,UAAU,mBACtF,uBAAGA,UAAU,sBAAsBiH,KAAK,WAAU,uBAAGjH,UAAU,yBAI3E,yBAAKA,UAAU,8BACX,yBAAKA,UAAU,YACX,6E,QCpCdmI,EAAW,SAACxG,GAAD,OAASA,GAAOA,EAAIC,QAC/BH,GAAY,SAACC,GAAD,OAAS,SAACC,GAAD,OAAWA,GAASA,EAAIC,QAAUF,IACvD0D,GAAY,SAAC1D,GAAD,OAAS,SAACC,GAAD,OAASA,GAAQA,EAAIC,QAAUF,IACpD0G,GAAW,SAACzG,GAAD,OAAU0G,MAAMC,OAAO3G,KAClC4G,GAAa,SAAC5G,GAAD,MAAS,4CAA4C6G,KAAK7G,IA8L9D8G,G,kDA1LX,WAAYvF,GAAO,IAAD,8BACd,cAAMA,IACDK,aAAa,EAAKA,aAAauC,KAAlB,gBAFJ,E,yDAKLtC,GACTQ,KAAKd,MAAMwF,aAAalF,GACxBQ,KAAKd,MAAMyF,kB,+BAGN,IAAD,OACJ,OACI,yBAAK3I,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACsB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMb,GAAG,SAAT,SAChB,kBAACa,EAAA,EAAD,CAAgBC,QAAM,GAAtB,YAEJ,yBAAKxB,UAAU,sBACX,0CACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,UACf,qDAEA,yBAAKA,UAAU,+BACP,2CACA,6DACyB,6BADzB,2BAEwB,6BAFxB,YAGS,6BACT,uBAAGA,UAAU,gBAJb,mBAI+C,6BAC/C,uBAAGA,UAAU,cALb,mBAK6C,6BAC7C,uBAAGA,UAAU,mBANb,KAMoC,uBAAGiH,KAAK,6BAAR,wBAG5C,yBAAKjH,UAAU,+BACX,oDAEJ,yBAAKA,UAAU,gCACX,yBAAKA,UAAU,YAAY4I,KAAK,SAC5B,uBAAGA,KAAK,SAAS5I,UAAU,kBAAkBiH,KAAK,oBAAmB,uBAAGjH,UAAU,gBAAlF,SACA,uBAAG4I,KAAK,SAAS5I,UAAU,gBAAe,uBAAGA,UAAU,gBAAvD,UACA,uBAAG4I,KAAK,SAAS5I,UAAU,kBAAkBiH,KAAK,6BAA4B,uBAAGjH,UAAU,qBAA3F,aAIZ,yBAAKA,UAAU,0CACZ,yBAAKA,UAAU,sBACZ,sDAEF,yBAAKA,UAAU,mBACf,kBAAC,OAAD,CAAMgF,MAAM,WAAWR,SAAU,SAAChB,GAAD,OAAY,EAAKD,aAAaC,KAC/D,kBAACiB,EAAA,EAAD,CAAKzE,UAAU,cACH,kBAAC0E,EAAA,EAAD,CAAOC,QAAQ,YAAYkE,GAAI,GAA/B,cACA,kBAACjE,EAAA,EAAD,CAAKiE,GAAI,IACL,kBAAC,UAAQ3D,KAAT,CAAcF,MAAM,aAAarE,GAAG,YAAYK,KAAK,YACjD8H,YAAY,aACZ9I,UAAU,eACVmF,WAAY,CACRgD,WAAU/C,UAAWA,GAAU,GAAI3D,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACIzB,UAAU,cACVgF,MAAM,aACNK,KAAK,UACLC,SAAU,CACN6C,SAAU,WACV/C,UAAW,oCACX3D,UAAW,qCAK3B,kBAACgD,EAAA,EAAD,CAAKzE,UAAU,cACX,kBAAC0E,EAAA,EAAD,CAAOC,QAAQ,WAAWkE,GAAI,GAA9B,aACA,kBAACjE,EAAA,EAAD,CAAKiE,GAAI,IACL,kBAAC,UAAQ3D,KAAT,CAAcF,MAAM,YAAYrE,GAAG,WAAWK,KAAK,WAC/C8H,YAAY,YACZ9I,UAAU,eACVmF,WAAY,CACRgD,WAAU/C,UAAWA,GAAU,GAAI3D,UAAWA,GAAU,OAGhE,kBAAC,SAAD,CACIzB,UAAU,cACVgF,MAAM,YACNK,KAAK,UACLC,SAAU,CACN6C,SAAU,WACV/C,UAAW,oCACX3D,UAAW,qCAK3B,kBAACgD,EAAA,EAAD,CAAKzE,UAAU,cACX,kBAAC0E,EAAA,EAAD,CAAOC,QAAQ,SAASkE,GAAI,GAA5B,gBACA,kBAACjE,EAAA,EAAD,CAAKiE,GAAI,IACL,kBAAC,UAAQ3D,KAAT,CAAcF,MAAM,UAAUrE,GAAG,SAASK,KAAK,SAC3C8H,YAAY,cACZ9I,UAAU,eACVmF,WAAY,CACRgD,WAAU/C,UAAWA,GAAU,GAAI3D,UAAWA,GAAU,IAAK2G,eAGrE,kBAAC,SAAD,CACIpI,UAAU,cACVgF,MAAM,UACNK,KAAK,UACLC,SAAU,CACN6C,SAAU,WACV/C,UAAW,iCACX3D,UAAW,6BACX2G,SAAU,wBAK1B,kBAAC3D,EAAA,EAAD,CAAKzE,UAAU,cACX,kBAAC0E,EAAA,EAAD,CAAOC,QAAQ,QAAQkE,GAAI,GAA3B,SACA,kBAACjE,EAAA,EAAD,CAAKiE,GAAI,IACL,kBAAC,UAAQ3D,KAAT,CAAcF,MAAM,SAASrE,GAAG,QAAQK,KAAK,QACzC8H,YAAY,QACZ9I,UAAU,eACVmF,WAAY,CACRgD,WAAUI,iBAGlB,kBAAC,SAAD,CACIvI,UAAU,cACVgF,MAAM,SACNK,KAAK,UACLC,SAAU,CACN6C,SAAU,WACVI,WAAY,6BAK5B,kBAAC9D,EAAA,EAAD,CAAKzE,UAAU,cACX,kBAAC4E,EAAA,EAAD,CAAKiE,GAAI,CAACE,KAAM,EAAGC,OAAQ,IACvB,yBAAKhJ,UAAU,cACX,kBAAC0E,EAAA,EAAD,CAAOuD,OAAK,GACR,kBAAC,UAAQgB,SAAT,CAAkBjE,MAAM,SAAShE,KAAK,QAClChB,UAAU,qBAFlB,IAGa,IACL,0DAIhB,kBAAC4E,EAAA,EAAD,CAAKiE,GAAI,CAACE,KAAM,EAAGC,OAAQ,IACvB,kBAAC,UAAQlE,OAAT,aAAgBE,MAAM,eAAeD,aAAa,OAAO/E,UAAU,iBAAiBgB,KAAK,eAAzF,YACc,gBACV,4BAAQkI,UAAQ,GAAhB,QACA,4CAIZ,kBAACzE,EAAA,EAAD,CAAKzE,UAAU,cACX,kBAAC0E,EAAA,EAAD,CAAOC,QAAQ,UAAUkE,GAAI,GAA7B,iBACA,kBAACjE,EAAA,EAAD,CAAKiE,GAAI,IACL,kBAAC,UAAQtD,SAAT,CAAkBP,MAAM,WAAWrE,GAAG,UAAUK,KAAK,UACjDwE,KAAK,KACLxF,UAAU,mBAGtB,kBAACyE,EAAA,EAAD,CAAKzE,UAAU,cACX,kBAAC4E,EAAA,EAAD,CAAKiE,GAAI,CAACE,KAAK,GAAIC,OAAQ,IACvB,kBAACnF,EAAA,EAAD,CAAQC,KAAK,SAASqF,MAAM,WAA5B,2B,GA9Kd1D,a,mBCLtB,SAAS2D,GAAT,GAA8C,IAAzBC,EAAwB,EAAxBA,KAAKjI,EAAmB,EAAnBA,UAAUC,EAAS,EAATA,QAChC,OAAGD,EAEK,yBAAKpB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKRqB,EAEA,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,eAAeqB,KAOrC,kBAAC,gBAAD,CAAgBW,IAAE,EAClBY,eAAgB,CACZC,cAAe,gCAEf,kBAACtC,EAAA,EAAD,KACI,kBAACK,EAAA,EAAD,CAASC,IAAKZ,EAAQoJ,EAAKvI,MAAOC,IAAKsI,EAAKrI,OAC5C,kBAAC8B,EAAA,EAAD,KACA,kBAAC5B,EAAA,EAAD,KAAW,4BAAKmI,EAAKrI,OACpBqI,EAAKC,YAAc,kBAACC,GAAA,EAAD,KAAc,4BAAKF,EAAKC,cAAmC,KAC/E,kBAACvG,EAAA,EAAD,KAAWsG,EAAKrG,gBA4CrBwG,OApCf,SAActG,GACV,OACI,yBAAKlD,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACsB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,CAAgBC,QAAM,GAAtB,SAEJ,yBAAKxB,UAAU,sBACX,oCACA,+BAGR,yBAAKA,UAAU,qCACX,yBAAKA,UAAU,qBACX,kBAACoJ,GAAD,CAAYC,KAAMnG,EAAM7C,KACpBe,UAAW8B,EAAMuG,cACjBpI,QAAS6B,EAAMwG,iBAGvB,yBAAK1J,UAAU,qBACX,kBAACoJ,GAAD,CAAYC,KAAMnG,EAAMyG,UACpBvI,UAAW8B,EAAM0G,kBACjBvI,QAAS6B,EAAM2G,qBAGvB,yBAAK7J,UAAU,qBACX,kBAACoJ,GAAD,CAAYC,KAAMnG,EAAM4G,OACpB1I,UAAW8B,EAAM6G,eACjB1I,QAAS6B,EAAM8G,qB,UCjEvC,SAASC,GAAT,GAAoD,IAA5BC,EAA2B,EAA3BA,QAAQ9I,EAAmB,EAAnBA,UAAUC,EAAS,EAATA,QACtC,OAAGD,EAEK,yBAAKpB,UAAU,aACX,yBAAKA,UAAU,OACX,kBAAC,EAAD,QAKRqB,EAEA,yBAAKrB,UAAU,aACX,yBAAKA,UAAU,OACX,wBAAIA,UAAU,eAAeqB,KAMvB6I,EAAQ9J,KAAI,SAAC0J,GAC3B,OACI,kBAAC,OAAD,CAAM9H,IAAE,GACJ,kBAACmI,GAAA,EAAD,CAAOC,IAAI,KAAKpK,UAAU,OACtB,kBAACmK,GAAA,EAAD,CAAOE,MAAI,EAACC,KAAG,GACX,kBAACH,GAAA,EAAD,CAAOtJ,IAAKZ,EAAQ6J,EAAOhJ,MAAOC,IAAK+I,EAAO9I,KAAMhB,UAAU,UAGlE,kBAACmK,GAAA,EAAD,CAAOI,MAAI,EAACvK,UAAU,QAClB,kBAACmK,GAAA,EAAD,CAAOK,SAAO,GACTV,EAAO9I,MAEZ,kBAACmJ,GAAA,EAAD,KACI,4BAAKL,EAAOR,YAAZ,MAEJ,kBAACa,GAAA,EAAD,KACI,2BAAG,wBAAInK,UAAU,sBAAsB8J,EAAO9G,qBAkF/DyH,OAvEf,SAAevH,GAEX,OACI,yBAAKlD,UAAU,aACX,yBAAKA,UAAU,OACX,kBAACsB,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KAAgB,kBAAC,IAAD,CAAMb,GAAG,SAAT,SAChB,kBAACa,EAAA,EAAD,CAAgBC,QAAM,GAAtB,aAEJ,yBAAKxB,UAAU,sBACX,wCACA,+BAGR,yBAAKA,UAAU,mBACX,yBAAKA,UAAU,mBACX,2CACA,waACA,6EAAkD,8CAAlD,iIAEJ,yBAAKA,UAAU,mBACX,kBAACO,EAAA,EAAD,KACI,kBAACU,EAAA,EAAD,CAAYjB,UAAU,yBAAtB,qBACA,kBAAC8C,EAAA,EAAD,KACI,wBAAI9C,UAAU,WACV,wBAAIA,UAAU,SAAd,WACA,wBAAIA,UAAU,SAAd,eACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,sBACA,wBAAIA,UAAU,SAAd,wBACA,wBAAIA,UAAU,SAAd,cACA,wBAAIA,UAAU,SAAd,aACA,wBAAIA,UAAU,SAAd,UAKhB,yBAAKA,UAAU,UACX,kBAACO,EAAA,EAAD,KACI,kBAACuC,EAAA,EAAD,CAAU9C,UAAU,YAChB,gCAAYA,UAAU,cAClB,uBAAGA,UAAU,QAAb,qFAEA,4BAAQA,UAAU,qBAAlB,cACA,0BAAM0K,MAAM,gBAAZ,0EAQpB,yBAAK1K,UAAU,mBACX,yBAAKA,UAAU,UACX,qDAEJ,yBAAKA,UAAU,UACX,kBAAC,UAAD,CAASgC,IAAE,GACP,kBAACmI,GAAA,EAAD,CAAOQ,MAAI,GACP,kBAACV,GAAD,CAAeC,QAAShH,EAAMgH,QAC9B9I,UAAW8B,EAAM9B,UACjBC,QAAS6B,EAAM7B,gB,iBCjH9BuJ,GAAgB,CACzBC,UAAW,GACXC,SAAU,GACVC,MAAM,GACNC,OAAO,GACPC,OAAM,EACNC,YAAY,OACZC,QAAQ,IAGCC,GAAa,WAAiC,IAAhC9H,EAA+B,uDAAzBsH,GAAgBS,EAAS,uCACtD,OAAOA,EAAOvH,MACV,ICGqB,kBDFjB,MAAO,GACX,ICEqB,kBDDjB,OAAOuH,EAAOC,QAClB,QACI,OAAOhI,IE6CNmG,GAAc,WACvB,MAAQ,CACJ3F,KDhEoB,mBCoEfyH,GAAU,SAACpL,GACpB,MAAQ,CACJ2D,KDrEgB,aCsEhBwH,QAASnL,IAIJqL,GAAa,SAACnK,GACvB,MAAO,CACHyC,KD3EmB,gBC4EnBwH,QAASjK,IAuBJoK,GAAY,SAAC3J,GACtB,MAAQ,CACJgC,KDnGkB,eCoGlBwH,QAASxJ,IAIJ4J,GAAe,SAACrK,GACzB,MAAO,CACHyC,KDzGqB,kBC0GrBwH,QAASjK,IAwBJ0I,GAAe,WACxB,MAAQ,CACJjG,KD9HqB,oBCkIhB6H,GAAW,SAACzB,GACrB,MAAQ,CACJpG,KDnIiB,cCoIjBwH,QAASpB,IAIJ0B,GAAc,SAACvK,GACxB,MAAO,CACHyC,KDzIoB,iBC0IpBwH,QAASjK,IAwBJwK,GAAc,WACvB,MAAQ,CACJ/H,KD1KoB,mBC8KfgI,GAAU,SAACC,GACpB,MAAQ,CACJjI,KD/KgB,aCgLhBwH,QAASS,IAIJC,GAAa,SAAC3K,GACvB,MAAO,CACHyC,KDrLmB,gBCsLnBwH,QAASjK,IAmCJ4K,GAAe,SAACC,GACzB,MAAQ,CACJpI,KDrNqB,kBCsNrBwH,QAASY,IAIJC,GAAe,SAAC9K,GACzB,MAAQ,CACJyC,KD9NoB,iBC+NpBwH,QAASjK,I,kBC3MX+K,G,kDAEF,WAAYlJ,GAAO,IAAD,8BACd,cAAMA,IAyBVmJ,WAAW,YAAY,IAAVC,EAAS,EAATA,MACT,OACI,kBAAC,EAAD,CAAYjM,KAAM,EAAK6C,MAAM/C,OAAOA,OAAOoM,QAAO,SAAAlM,GAAI,OAAEA,EAAKM,KAAK6L,SAASF,EAAMG,OAAO9L,GAAG,OAAK,GAC5FmB,SAAU,EAAKoB,MAAMpB,SAASA,SAASyK,QAAO,SAAAxK,GAAO,OAAEA,EAAQ2B,SAAS8I,SAASF,EAAMG,OAAO9L,GAAG,OACjGS,UAAW,EAAK8B,MAAM/C,OAAOiB,UAC7BC,QAAS,EAAK6B,MAAM/C,OAAOkB,QAC3BqL,gBAAiB,EAAKxJ,MAAMpB,SAAST,QACrCoC,YAAa,EAAKP,MAAMO,eA/BhC,EAAKkJ,SAAS,EAAKA,SAAS7G,KAAd,gBAFA,E,uDAMd,OAAQ,kBAAC,GAAD,CACJzF,KAAM2D,KAAKd,MAAM/C,OAAOA,OAAOoM,QAAO,SAAClM,GAAD,OAASA,EAAKuM,YAAU,GAC9DnD,cAAezF,KAAKd,MAAM/C,OAAOiB,UACjCsI,cAAe1F,KAAKd,MAAM/C,OAAOkB,QACjCyI,OAAQ9F,KAAKd,MAAMgH,QAAQA,QAAQqC,QAAO,SAACzC,GAAD,OAAUA,EAAO8C,YAAU,GACrE7C,eAAgB/F,KAAKd,MAAMgH,QAAQ9I,UACnC4I,eAAgBhG,KAAKd,MAAMgH,QAAQ7I,QACnCsI,UAAW3F,KAAKd,MAAM2J,WAAWA,WAAWN,QAAO,SAACO,GAAD,OAASA,EAAMF,YAAU,GAC5EhD,kBAAmB5F,KAAKd,MAAM2J,WAAWzL,UACzCyI,kBAAmB7F,KAAKd,MAAM2J,WAAWxL,Y,0CAK7C2C,KAAKd,MAAM6J,cACX/I,KAAKd,MAAM8J,gBACXhJ,KAAKd,MAAM+J,cACXjJ,KAAKd,MAAMgK,iB,+BAeN,IAAD,OACJ,OACA,6BACI,kBAAC,EAAD,MACA,kBAACC,GAAA,EAAD,KACI,kBAACC,GAAA,EAAD,CAAenL,IAAK+B,KAAKd,MAAMmK,SAASpL,IAAKqL,WAAW,OAAOC,QAAS,KACpE,kBAAC,KAAD,CAAQF,SAAUrJ,KAAKd,MAAMmK,UACzB,kBAAC,KAAD,CAAOG,KAAK,QAAQC,UAAWzJ,KAAK2I,WACpC,kBAAC,KAAD,CAAOa,KAAK,aAAaC,UAAW,kBAAI,kBAAC,GAAD,CAAS9E,cAAe,EAAKzF,MAAMyF,cACvED,aAAc,EAAKxF,MAAMwF,kBAE7B,kBAAC,KAAD,CAAOgF,OAAK,EAACF,KAAK,QAAQC,UAAW,kBAAI,kBAAC,EAAD,CAAMtN,OAAQ,EAAK+C,MAAM/C,OAAOA,OACrEiB,UAAW,EAAK8B,MAAM/C,OAAOiB,UAC7BC,QAAS,EAAK6B,MAAM/C,OAAOkB,aAE/B,kBAAC,KAAD,CAAOmM,KAAK,YAAYC,UAAWzJ,KAAKqI,aACxC,kBAAC,KAAD,CAAOmB,KAAK,WAAWC,UAAW,kBAAK,kBAAC,GAAD,CAASvD,QAAS,EAAKhH,MAAMgH,QAAQA,QACxE9I,UAAW,EAAK8B,MAAMgH,QAAQ9I,UAC9BC,QAAS,EAAK6B,MAAMgH,QAAQ7I,aAGhC,kBAAC,KAAD,CAAUX,GAAG,aAIzB,kBAAC,EAAD,W,GAjEO+E,aAuEJkI,gBAAWC,oBA5FJ,SAACtK,GACnB,MAAQ,CACJnD,OAAQmD,EAAMnD,OACd+J,QAAS5G,EAAM4G,QACf2C,WAAYvJ,EAAMuJ,WAClB/K,SAAUwB,EAAMxB,aAIC,SAAC+L,GACtB,MAAO,CACHpK,YAAa,SAACC,EAAOC,EAAOzB,EAAOH,GAAtB,OAAiC8L,EDd7B,SAACnK,EAAOC,EAAOzB,EAAOH,GAAtB,OAAgC,SAAC8L,GACtD,IAAIC,EAAW,CACXpK,OAAQA,EACRC,OAAQ6I,SAAS7I,EAAO,IACxBzB,OAAQA,EACRH,QAASA,GAIb,OAFA+L,EAAWnL,MAAK,IAAIF,MAAOsL,cAEpBC,MAAM/N,EAAQ,WAAW,CAC5BgO,OAAQ,OACR1D,KAAMpE,KAAKC,UAAU0H,GACrBI,QAAS,CACL,eAAe,oBAEnBC,YAAa,gBACdC,MAAK,SAAAC,GACJ,GAAGA,EAASC,GACR,OAAOD,EAASE,OAIhB,MADQ,IAAIC,MAAM,SAASH,EAASI,OAAO,KAAKJ,EAASK,eAG9D,SAAAC,GAEC,MADY,IAAIH,MAAMG,EAAMxD,YAE7BiD,MAAK,SAAArM,GAAO,OAAE8L,EAlCG,SAAC9L,GACrB,MAAQ,CACJ+B,KDNiB,cCOjBwH,QAASvJ,GA+Ba6M,CAAW7M,OAAW8M,OAAM,SAAAC,GAClDC,QAAQC,IAAIF,EAAI3D,SAChBjF,MAAM,6CAA6C4I,EAAI3D,aCfA1H,CAAYC,EAAOC,EAAOzB,EAAOH,KACxFgL,YAAa,kBAAKc,GDkBG,SAACA,GAG1B,OAFAA,EAASpE,MAEFuE,MAAM/N,EAAQ,UACpBmO,MAAK,SAAAC,GACF,GAAGA,EAASC,GACR,OAAOD,EAASE,OAIhB,MADU,IAAIC,MAAM,QAAQH,EAASI,OAAO,IAAIJ,EAASK,eAG9D,SAAAC,GAEC,MADY,IAAIH,MAAMG,EAAMxD,YAG/BiD,MAAK,SAAAjO,GAAM,OAAE0N,EAAStC,GAAUpL,OAChC0O,OAAM,SAAAC,GAAG,OAAEjB,EAASrC,GAAasD,EAAI3D,iBClClCxC,cAAe,kBAAKkF,EAASoB,UAAQC,MAAM,cAC3ClC,cAAe,kBAAKa,GDwDG,SAACA,GAE5B,OAAOG,MAAM/N,EAAQ,YACpBmO,MAAK,SAAAC,GACF,GAAGA,EAASC,GACR,OAAOD,EAASE,OAIhB,MADU,IAAIC,MAAM,QAAQH,EAASI,OAAO,IAAIJ,EAASK,eAG9D,SAAAC,GAEC,MADY,IAAIH,MAAMG,EAAMxD,YAG/BiD,MAAK,SAAAtM,GAAQ,OAAE+L,EAASpC,GAAY3J,OACpC+M,OAAM,SAAAC,GAAG,OAAEjB,EAASnC,GAAeoD,EAAI3D,iBCvEpC+B,aAAc,kBAAKW,GDwFG,SAACA,GAG3B,OAFAA,EAAS9D,MAEFiE,MAAM/N,EAAQ,WACpBmO,MAAK,SAAAC,GACF,GAAGA,EAASC,GACR,OAAOD,EAASE,OAIhB,MADU,IAAIC,MAAM,QAAQH,EAASI,OAAO,IAAIJ,EAASK,eAG9D,SAAAC,GAEC,MADY,IAAIH,MAAMG,EAAMxD,YAG/BiD,MAAK,SAAAlE,GAAO,OAAE2D,EAASlC,GAAWzB,OAClC2E,OAAM,SAAAC,GAAG,OAAEjB,EAASjC,GAAckD,EAAI3D,iBCxGnC8B,YAAa,kBAAKY,GD+HG,SAACA,GAG1B,OAFAA,EAAShC,MAEFmC,MAAM/N,EAAQ,cACpBmO,MAAK,SAAAC,GACF,GAAGA,EAASC,GACR,OAAOD,EAASE,OAIhB,MADU,IAAIC,MAAM,QAAQH,EAASI,OAAO,IAAIJ,EAASK,eAG9D,SAAAC,GAEC,MADY,IAAIH,MAAMG,EAAMxD,YAG3BiD,MAAK,SAAArC,GAAM,OAAE8B,EAAS/B,GAAUC,OACpC8C,OAAM,SAAAC,GAAG,OAAEjB,EAAS7B,GAAa8C,EAAI3D,iBC/IlCzC,aAAc,SAACwD,GAAD,OAAY2B,GDsKPsB,ECtK6BjD,EDsKtB,SAAC2B,GAC/B,IAAM3B,EAAS,gBAAIiD,GAGnB,OAFAjD,EAASvJ,MAAM,IAAIF,MAAOsL,cAEnBC,MAAM/N,EAAQ,WAAW,CAC5BgO,OAAQ,OACR1D,KAAMpE,KAAKC,UAAU8F,GACrBgC,QAAS,CACL,eAAe,oBAEnBC,YAAa,gBACdC,MAAK,SAAAgB,GACJ,GAAGA,EAAId,GACH,OAAOc,EAIP,MADQ,IAAIZ,MAAM,SAASY,EAAIX,OAAO,KAAKW,EAAIV,eAGrD,SAAAC,GAEE,MADQ,IAAIH,MAAMG,EAAMxD,YAEzBiD,MAAK,SAAAgB,GAAG,OAAEA,EAAIb,UAAQH,MAAK,SAAAgB,GAC1BvB,EAAS5B,GAAemD,IACxBlJ,MAAMC,KAAKC,UAAUgJ,OACtBP,OAAM,SAAAC,GACLjB,EAAS1B,GAAe2C,IACxB5I,MAAM,sCAAsC4I,EAAI3D,eA3B9B,IAACgE,MC3FDvB,CAA4CxB,K,yBCzGhEiD,GAAa,CACfjO,WAAW,EACXC,QAAS,KACTlB,OAAQ,IAGCmP,GAAO,WAA8B,IAA7BhM,EAA4B,uDAAtB+L,GAAahE,EAAS,uCAC7C,OAAOA,EAAOvH,MACV,IHPoB,iBGQhB,OAAO,aAAC,gBAAIR,GAAZ,IAAkBlC,WAAU,EAAKC,QAAQ,KAAKlB,OAAO,KACzD,IHPmB,gBGQf,OAAO,aAAC,gBAAImD,GAAZ,IAAkBlC,WAAU,EAAMC,QAAQgK,EAAOC,QAAQnL,OAAO,KACpE,IHVgB,aGWZ,OAAO,aAAC,gBAAImD,GAAZ,IAAkBlC,WAAU,EAAMC,QAAQ,KAAKlB,OAAOkL,EAAOC,UACjE,QACI,OAAOhI,ICdb+L,GAAa,CACfjO,WAAW,EACXC,QAAS,KACT6I,QAAS,IAGAqF,GAAQ,WAA8B,IAA7BjM,EAA4B,uDAAtB+L,GAAahE,EAAS,uCAC9C,OAAOA,EAAOvH,MACV,IJGqB,kBIFjB,OAAO,aAAC,gBAAIR,GAAZ,IAAkBlC,WAAU,EAAKC,QAAQ,KAAK6I,QAAQ,KAC1D,IJGoB,iBIFhB,OAAO,aAAC,gBAAI5G,GAAZ,IAAkBlC,WAAU,EAAMC,QAAQgK,EAAOC,QAAQpB,QAAQ,KACrE,IJAiB,cICb,OAAO,aAAC,gBAAI5G,GAAZ,IAAkBlC,WAAU,EAAMC,QAAQ,KAAK6I,QAAQmB,EAAOC,UAClE,QACI,OAAOhI,ICfb+L,GAAa,CACfhO,QAAS,KACTS,SAAU,IAGD0N,GAAS,WAA8B,IAA7BlM,EAA4B,uDAAtB+L,GAAahE,EAAS,uCAC/C,OAAOA,EAAOvH,MACV,ILFqB,kBKGjB,OAAO,aAAC,gBAAIR,GAAZ,IAAkBjC,QAAQgK,EAAOC,QAAQxJ,SAAS,KACtD,ILLkB,eKMd,OAAO,aAAC,gBAAIwB,GAAZ,IAAkBjC,QAAQ,KAAKS,SAASuJ,EAAOC,UACnD,ILbiB,cKcb,IAAMvJ,EAAQsJ,EAAOC,QACrB,OAAO,6BAAIhI,GAAX,IAAiBxB,SAAUwB,EAAMxB,SAAS2N,OAAO1N,KACrD,QACI,OAAOuB,ICfb+L,GAAe,CAAEjO,WAAW,EAC9BC,QAAS,KACTwL,WAAW,IAEF6C,GAAa,WAAmC,IAAlCpM,EAAiC,uDAAzB+L,GAAchE,EAAW,uCACxD,OAAQA,EAAOvH,MACX,INEgB,aMDhB,OAAO,6BAAIR,GAAX,IAAkBlC,WAAW,EAAOC,QAAS,KAAMwL,WAAYxB,EAAOC,UAEtE,INFoB,iBMGhB,OAAO,6BAAIhI,GAAX,IAAkBlC,WAAW,EAAMC,QAAS,KAAMwL,WAAY,KAElE,INHmB,gBMIf,OAAO,6BAAIvJ,GAAX,IAAkBlC,WAAW,EAAOC,QAASgK,EAAOC,UAExD,QACE,OAAOhI,I,6BCTXqM,GCGWC,uBAAYC,2BAAgB,cACrC1P,OAAQmP,GACRzC,WAAY6C,GACZxF,QAASqF,GACTzN,SAAU0N,IACPM,sBAAY,CACX5D,SAAUd,OAEf2E,2BAAgBC,KAAMC,ODIdC,G,uKAZX,OACE,kBAAC,YAAD,CAAUP,MAAOA,IACf,kBAAC,IAAD,KACE,6BACI,kBAAC,GAAD,a,GANIlK,aEEE0K,QACW,cAA7BC,OAAO/C,SAASgD,UAEe,UAA7BD,OAAO/C,SAASgD,UAEhBD,OAAO/C,SAASgD,SAAS/D,MACvB,2DCXNgE,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,GAAD,OAEFC,SAASC,eAAe,SDwHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBzC,MAAK,SAAA0C,GACJA,EAAaC,gBAEdlC,OAAM,SAAAF,GACLI,QAAQJ,MAAMA,EAAMxD,a","file":"static/js/main.c6db50f0.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nexport const Loading=()=>{\r\n    return (\r\n        <div className=\"col-12 text-center align-items-center\">\r\n            <span className=\"fa fa-spinner fa-pulse fa-fw fa-3x text-primary\"></span>\r\n            <p className=\"text-primary\">Loading...</p>\r\n        </div>\r\n    );\r\n}","export const baseUrl=\"https://trex3067.github.io/confusion/\";","import React from 'react';\r\n//import {Media} from 'reactstrap';\r\nimport {Card,CardBody,CardImg,CardImgOverlay,CardText,CardTitle,UncontrolledCollapse, CardHeader, Breadcrumb, BreadcrumbItem} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from './shared/baseUrl';\r\n\r\nfunction RenderMenu({dishes}){\r\n    const menu=dishes.map(dish=>{\r\n        return (\r\n            // <div id={dish.id} className=\"col-12 mt-5\">\r\n            //     <Media tag=\"li\" className=\"rd\">\r\n            //         <Media left middle>\r\n            //             <Media object src={dish.image} alt={dish.name} />\r\n            //         </Media>\r\n            //         <Media body className=\"ml-5\">\r\n            //             <Media heading>{dish.name}</Media>\r\n            //             <p>{dish.description}</p>\r\n            //             <p>{dish.description}</p>\r\n            //             <p>{dish.description}</p>\r\n            //             <p>{dish.description}</p>\r\n            //             <p>{dish.description}</p>\r\n            //         </Media>\r\n            //     </Media>\r\n            // </div>\r\n            <div className=\"col-12 col-md-5 m-1 text-center\">\r\n                <RenderDish dish={dish} />\r\n            </div>\r\n        );\r\n        });\r\n    return menu;\r\n}\r\n\r\nfunction RenderDish({dish}){\r\n   return (\r\n            <Card className=\"bg-light bg-primary\"  style={{cursor:\"pointer\"}}>\r\n                <Link to={`/menu/${dish.id}`}>\r\n                    <CardImg src={baseUrl+dish.image} alt={dish.name}>\r\n\r\n                    </CardImg>\r\n                    <CardHeader>\r\n                        <CardTitle>\r\n                            <h3>{dish.name}</h3>\r\n                        </CardTitle>                            \r\n                    </CardHeader>\r\n                </Link>\r\n                {/* <UncontrolledCollapse toggler={`#toggle${dish.id}`}>\r\n                <CardBody>\r\n                    <CardText>\r\n                        {dish.description}\r\n                    </CardText>\r\n                </CardBody>\r\n                </UncontrolledCollapse> */}\r\n            </Card>\r\n   );\r\n}\r\n\r\nfunction Menu({dishes,isLoading,errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }   \r\n    else if(errMess){\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h3 className=\"text-danger\">{errMess}</h3>\r\n                </div>\r\n            </div>\r\n        );\r\n    }        \r\n    else{\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12 text-center\">\r\n                        <h2>Menu</h2>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row justify-content-center\">\r\n                    <RenderMenu dishes={dishes} />\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default Menu;","import React, {Component} from 'react';\r\nimport {Card,CardBody,CardHeader,CardImg, CardTitle, CardText, CardSubtitle,Breadcrumb,BreadcrumbItem,Button,Modal,Label,Row,Col, ModalHeader, ModalBody} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {LocalForm,Errors,Control} from 'react-redux-form';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from './shared/baseUrl';\r\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\r\n\r\nconst minLength=(len)=>(val)=> val && val.length>=len;\r\nconst maxLength=(len)=>(val)=> !val || val.length<=len;\r\n\r\nfunction RenderComments({comments}){\r\n    const commentsToRender=comments.map(comment=>{\r\n        return (\r\n            <Fade in>\r\n                <li key={comment.id}>\r\n                    <p>{comment.comment}</p>\r\n                    <p>-- {comment.author} , {new Intl.DateTimeFormat('en-US', { year: 'numeric', month: 'short', day: '2-digit'}).format(new Date(Date.parse(comment.date)))}</p>\r\n                </li>\r\n            </Fade>\r\n        );\r\n    });\r\n    return commentsToRender;\r\n}\r\n\r\nfunction RenderDish({dish}){\r\n    return (\r\n        <div className=\"col-12 col-md-5 m-1\">\r\n        <FadeTransform in transformProps={{exitTransform: 'scale(0.5) translateY(-50%)'}}>\r\n            <Card>\r\n                <CardImg src={baseUrl+dish.image} alt={dish.name}></CardImg>\r\n                    <CardBody>\r\n                        <CardTitle>\r\n                            <h3>{dish.name}</h3>\r\n                        </CardTitle>\r\n                        <CardText>\r\n                            {dish.description}\r\n                        </CardText>\r\n                    </CardBody>\r\n            </Card>\r\n        </FadeTransform>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction DishDetail(props){\r\n        if(props.isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n        }   \r\n        else if(props.errMess){\r\n            return(\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <h3 className=\"text-danger\">{props.errMess}</h3>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else if(props.dish!==null){            \r\n            return (\r\n                <div className=\"container\">\r\n                    <div className=\"row\">\r\n                        <Breadcrumb>\r\n                            <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\r\n                            <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\r\n                        </Breadcrumb>\r\n                    </div>\r\n                    <div className=\"row justify-content-center\">\r\n                        <RenderDish dish={props.dish} />\r\n                        <div className=\"col-12 col-md-5 m-1\">\r\n                            <h2 className=\"text-center\">Comments</h2>\r\n                                <Stagger in>\r\n                                    <ul className=\"list-unstyled\">\r\n                                    <RenderComments dishId={props.dish.id} comments={props.comments} postComment={props.postComment}/>\r\n                                    </ul>\r\n                                </Stagger>\r\n                            <CommentForm dishId={props.dish.id} postComment={props.postComment}/>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            );\r\n        }\r\n        else{\r\n            return null;\r\n        }\r\n}\r\n\r\nclass CommentForm extends Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            isModalOpen: false\r\n        }\r\n    }\r\n\r\n    toggelModal=()=>{\r\n        this.setState({isModalOpen: !this.state.isModalOpen});\r\n    }\r\n\r\n    handleSubmit=(values)=>{\r\n        this.props.postComment(this.props.dishId,values.rating,values.name,values.comment);\r\n        this.toggelModal();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n                <div className=\"d-flex mb-5 mt-2 justify-content-start\">\r\n                    <Button type=\"button\" className=\"btn font-weight-bold btn-secondary\" onClick={this.toggelModal}>\r\n                        <span className=\"fa fa-pencil\"></span> Submit Comment\r\n                    </Button>\r\n                </div>\r\n                <div>\r\n                    <Modal fade isOpen={this.state.isModalOpen} toggle={this.toggelModal}>\r\n                        <ModalHeader charcode=\"\\u0e49\" className=\"bg-dark2 text-white\" toggle={this.toggelModal}>\r\n                            Comment\r\n                        </ModalHeader>\r\n                        <ModalBody className=\"p-4\">\r\n                            <LocalForm onSubmit={this.handleSubmit}>\r\n                                <Row className=\"form-group\">\r\n                                    <Label className=\"col-12\" htmlFor=\"rating\">Rating</Label>\r\n                                    <Col sm={12}>\r\n                                        <Control.select defaultValue=\"1\" className=\"form-control\" model=\".rating\"\r\n                                        id=\"rating\" name=\"rating\">\r\n                                            <option value=\"1\">1</option>\r\n                                            <option value=\"2\">2</option>\r\n                                            <option value=\"3\">3</option>\r\n                                            <option value=\"4\">4</option>\r\n                                            <option value=\"5\">5</option>\r\n                                        </Control.select>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label className=\"col-12\" htmlFor=\"name\">Your Name</Label>\r\n                                    <Col sm={12}>\r\n                                        <Control.text className=\"form-control\" model=\".name\"\r\n                                        id=\"name\" name=\"name\"\r\n                                        validators={{minLength:minLength(3),maxLength: maxLength(15)}}>\r\n                                        </Control.text>\r\n                                        <Errors\r\n                                        className=\"text-danger\"\r\n                                        show=\"touched\"\r\n                                        model=\".name\"\r\n                                        messages={{\r\n                                            minLength: \"Name must be atleast 3 letters long.\",\r\n                                            maxLength: \"Name must not exceed 15 characters.\"\r\n                                        }}>\r\n\r\n                                        </Errors>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group\">\r\n                                    <Label className=\"col-12\" htmlFor=\"comment\">Comment</Label>\r\n                                    <Col sm={12}>\r\n                                        <Control.textarea className=\"form-control\" model=\".comment\"\r\n                                        id=\"comment\" name=\"comment\"\r\n                                        rows=\"6\">\r\n                                        </Control.textarea>\r\n                                    </Col>\r\n                                </Row>\r\n                                <Row className=\"form-group justify-content-center\">\r\n                                    <Button type=\"submit\" className=\"btn bg-primary\">Submit</Button>\r\n                                </Row>\r\n                            </LocalForm>\r\n                        </ModalBody>\r\n                    </Modal>\r\n                </div>\r\n            </React.Fragment>\r\n        );\r\n    }\r\n}\r\n\r\nexport default DishDetail;","import React, { Component } from 'react';\r\nimport { Navbar,NavItem,NavbarToggler,Collapse,Nav, NavbarBrand, Jumbotron, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label, Button } from 'reactstrap';\r\nimport {NavLink} from 'react-router-dom';\r\n\r\nclass Header extends Component {\r\n  constructor(props){\r\n    super(props);\r\n    this.state={\r\n      isNavOpen:false,\r\n      isModalOpen:false\r\n    };\r\n    this.toggleNav=this.toggleNav.bind(this);\r\n    this.toggleModal=this.toggleModal.bind(this);\r\n    this.handleLogin=this.handleLogin.bind(this);\r\n  }\r\n\r\n  toggleNav(){\r\n    this.setState({isNavOpen: !this.state.isNavOpen});\r\n  }\r\n\r\n  toggleModal(){\r\n    this.setState({isModalOpen: !this.state.isModalOpen})\r\n  }\r\n\r\n  handleLogin(event){\r\n    this.toggleModal();\r\n    alert(JSON.stringify({\r\n      Username: this.username.value,\r\n      Password: this.password.value,\r\n      Remember: this.remember.checked\r\n    }));\r\n    event.preventDefault();\r\n  }\r\n\r\n  render() {\r\n    return(\r\n    <React.Fragment>\r\n      <Navbar dark expand=\"md\">\r\n        <div className=\"container\">\r\n          <NavbarBrand href=\"/\">\r\n            <img src=\"assets/images/logo.png\" alt=\"Ristorante Confusion\" height=\"30\" width=\"41\"></img>\r\n          </NavbarBrand>\r\n        <NavbarToggler onClick={this.toggleNav}></NavbarToggler>\r\n          <Collapse isOpen={this.state.isNavOpen} navbar>\r\n            <Nav navbar className=\"ml-auto\">\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/home\" >\r\n                  <span className=\"fa m-1 fa-home fa-lg\"></span>Home\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/aboutus\">\r\n                  <span className=\"fa m-1 fa-info fa-lg\"></span>About Us\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/menu\">\r\n                  <span className=\"fa m-1 fa-list fa-lg\"></span>Menu\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <NavLink className=\"nav-link\" to=\"/contactus\">\r\n                  <span className=\"fa m-1 fa-address-card fa-lg\"></span>Contact Us\r\n                </NavLink>\r\n              </NavItem>\r\n              <NavItem>\r\n                <Button outline onClick={this.toggleModal}>\r\n                  <span className=\"fa fa-sign-in fa-lg\"></span> Login\r\n                </Button>\r\n              </NavItem>\r\n            </Nav>\r\n          </Collapse>\r\n        </div>\r\n      </Navbar>\r\n      <Jumbotron>\r\n           <div className=\"container\">\r\n               <div className=\"row row-header\">\r\n                   <div className=\"col-12 col-sm-6\">\r\n                       <h1>Ristorante con Fusion</h1>\r\n                       <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\r\n                   </div>\r\n               </div>\r\n           </div>\r\n       </Jumbotron>\r\n       <Modal fade={true} isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\r\n         <ModalHeader className=\"bg-dark2 text-white\" toggle={this.toggleModal}>Log In</ModalHeader>\r\n         <ModalBody className=\"p-4\">\r\n           <Form>\r\n             <FormGroup row>\r\n               <Label htmlFor=\"username\">Username</Label>\r\n               <Input type=\"text\" id=\"username\" name=\"username\"\r\n               innerRef={(input)=>this.username=input}></Input>\r\n             </FormGroup>\r\n             <FormGroup row>\r\n               <Label htmlFor=\"password\">Password</Label>\r\n               <Input type=\"password\" id=\"password\" name=\"password\"\r\n               innerRef={(input)=>this.password=input}></Input>\r\n             </FormGroup>\r\n             <FormGroup row>\r\n               <FormGroup check>\r\n                  <Label check>\r\n                    <Input type=\"checkbox\" id=\"remember\" name=\"remember\"\r\n                    innerRef={(input)=>this.remember=input}></Input>\r\n                    Remember me\r\n                  </Label>\r\n               </FormGroup>\r\n             </FormGroup>\r\n             <FormGroup row className=\"justify-content-around\">\r\n              <Button type=\"submit\" onClick={this.handleLogin} className=\"btn bg-success\">Log In</Button>\r\n              <Button type=\"button\" onClick={this.toggleModal} className=\"btn bg-primary\">Cancel</Button>\r\n             </FormGroup>\r\n           </Form>\r\n         </ModalBody>\r\n       </Modal>\r\n    </React.Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\nimport {Link} from 'react-router-dom';\r\nfunction Footer(props) {\r\n    return(\r\n    <div className=\"footer\">\r\n        <div className=\"container\">\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-4 offset-1 col-sm-2\">\r\n                    <h5>Links</h5>\r\n                    <ul className=\"list-unstyled\">\r\n                        <li><Link to=\"/home\">Home</Link></li>\r\n                        <li><Link to=\"/aboutus\">About</Link></li>\r\n                        <li><Link to=\"/menu\">Menu</Link></li>\r\n                        <li><Link to=\"/contactus\">Contact</Link></li>\r\n                    </ul>\r\n                </div>\r\n                <div className=\"col-7 col-sm-5\">\r\n                    <h5>Our Address</h5>\r\n                    <address>\r\n\t\t              121, Clear Water Bay Road<br />\r\n\t\t              Clear Water Bay, Kowloon<br />\r\n\t\t              HONG KONG<br />\r\n\t\t              <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\r\n\t\t              <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\r\n\t\t              <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\r\n                         confusion@food.net</a>\r\n                    </address>\r\n                </div>\r\n                <div className=\"col-12 col-sm-4 align-self-center\">\r\n                    <div className=\"text-center\">\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\r\n                        <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\r\n                        <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n            <div className=\"row justify-content-center\">             \r\n                <div className=\"col-auto\">\r\n                    <p>© Copyright 2018 Ristorante Con Fusion</p>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    </div>\r\n    )\r\n}\r\n\r\nexport default Footer;","import React,{Component} from 'react';\r\nimport {Breadcrumb,BreadcrumbItem,Button, Row, Label, Input, Col, FormFeedback} from 'reactstrap';\r\nimport {Link} from 'react-router-dom';\r\nimport {Control, Errors, Form} from 'react-redux-form';\r\n\r\nconst required = (val) => val && val.length;\r\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\r\nconst minLength = (len) => (val) => val && (val.length >= len);\r\nconst isNumber = (val) => !isNaN(Number(val));\r\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\r\n\r\nclass Contact extends Component {\r\n    \r\n    constructor(props){\r\n        super(props);    \r\n        this.handleSubmit=this.handleSubmit.bind(this);\r\n    }\r\n    \r\n    handleSubmit(values){        \r\n        this.props.postFeedback(values);\r\n        this.props.resetFeedback();\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Breadcrumb>\r\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                        <BreadcrumbItem active>Contact</BreadcrumbItem>\r\n                    </Breadcrumb>\r\n                    <div className=\"col-12 text-center\">\r\n                        <h2>Contact Us</h2>\r\n                        <hr/>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content\">\r\n                    <div className=\"col-12\">\r\n                    <h3>Location Information</h3>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\r\n                            <h5>Our Address</h5>\r\n                            <address>\r\n                            121, Clear Water Bay Road<br />\r\n                            Clear Water Bay, Kowloon<br />\r\n                            HONG KONG<br />\r\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br />\r\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br />\r\n                            <i className=\"fa fa-envelope\"></i>: <a href=\"mailto:confusion@food.net\">confusion@food.net</a>\r\n                            </address>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\r\n                        <h5>Map of our Location</h5>\r\n                    </div>\r\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\r\n                        <div className=\"btn-group\" role=\"group\">\r\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i className=\"fa fa-phone\"></i> Call</a>\r\n                            <a role=\"button\" className=\"btn btn-info\"><i className=\"fa fa-skype\"></i> Skype</a>\r\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i className=\"fa fa-envelope-o\"></i> Email</a>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"row row-content justify-content-center\">\r\n                   <div className=\"col-12 text-center\">\r\n                      <h3>Send us your Feedback</h3>\r\n                   </div>\r\n                    <div className=\"col-12 col-md-9\">\r\n                    <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\r\n                    <Row className=\"form-group\">\r\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\r\n                                        placeholder=\"First Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".firstname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\r\n                                        placeholder=\"Last Name\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15)\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".lastname\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 characters',\r\n                                            maxLength: 'Must be 15 characters or less'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\r\n                                        placeholder=\"Tel. Number\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, minLength: minLength(3), maxLength: maxLength(15), isNumber\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".telnum\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            minLength: 'Must be greater than 2 numbers',\r\n                                            maxLength: 'Must be 15 numbers or less',\r\n                                            isNumber: 'Must be a number'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\r\n                                <Col md={10}>\r\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\r\n                                        placeholder=\"Email\"\r\n                                        className=\"form-control\"\r\n                                        validators={{\r\n                                            required, validEmail\r\n                                        }}\r\n                                         />\r\n                                    <Errors\r\n                                        className=\"text-danger\"\r\n                                        model=\".email\"\r\n                                        show=\"touched\"\r\n                                        messages={{\r\n                                            required: 'Required',\r\n                                            validEmail: 'Invalid Email Address'\r\n                                        }}\r\n                                     />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size: 6, offset: 2}}>\r\n                                    <div className=\"form-check\">\r\n                                        <Label check>\r\n                                            <Control.checkbox model=\".agree\" name=\"agree\"\r\n                                                className=\"form-check-input\"\r\n                                                 /> {' '}\r\n                                                <strong>May we contact you?</strong>\r\n                                        </Label>\r\n                                    </div>\r\n                                </Col>\r\n                                <Col md={{size: 3, offset: 1}}>\r\n                                    <Control.select model=\".contactType\" defaultValue=\"Tel.\" className=\"custom-control\" name=\"contactType\"\r\n                                        className=\"form-control\">\r\n                                        <option selected>Tel.</option>\r\n                                        <option>Email</option>\r\n                                    </Control.select>\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\r\n                                <Col md={10}>\r\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\r\n                                        rows=\"12\"\r\n                                        className=\"form-control\" />\r\n                                </Col>\r\n                            </Row>\r\n                            <Row className=\"form-group\">\r\n                                <Col md={{size:10, offset: 2}}>\r\n                                    <Button type=\"submit\" color=\"primary\">\r\n                                    Send Feedback\r\n                                    </Button>\r\n                                </Col>\r\n                            </Row>\r\n                        </Form>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        );        \r\n    }\r\n\r\n}\r\n\r\nexport default Contact;","import React from 'react';\r\nimport {Card,CardBody,CardImg,CardTitle,CardSubtitle, CardText, Breadcrumb,BreadcrumbItem} from 'reactstrap';\r\nimport {Loading} from './LoadingComponent';\r\nimport {baseUrl} from './shared/baseUrl';\r\nimport {FadeTransform} from 'react-animation-components';\r\n\r\nfunction RenderCard({item,isLoading,errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }   \r\n    else if(errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h3 className=\"text-danger\">{errMess}</h3>\r\n                </div>\r\n            </div>\r\n        );\r\n    }        \r\n    else{\r\n        return(\r\n            <FadeTransform  in\r\n            transformProps={{\r\n                exitTransform: 'scale(0.5) translateY(-50%)'\r\n            }}>\r\n                <Card>\r\n                    <CardImg src={baseUrl+item.image} alt={item.name} />\r\n                    <CardBody>\r\n                    <CardTitle><h3>{item.name}</h3></CardTitle>\r\n                    {item.designation ? <CardSubtitle><h5>{item.designation}</h5></CardSubtitle> : null }\r\n                    <CardText>{item.description}</CardText>\r\n                    </CardBody>\r\n                </Card>\r\n            </FadeTransform>\r\n        );\r\n    }\r\n}\r\n\r\nfunction Home(props){\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem active>Home</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12 text-center\">\r\n                    <h2>Home</h2>\r\n                    <hr/>\r\n                </div>\r\n            </div>\r\n            <div className=\"row align-items-start row-content\">\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.dish}\r\n                        isLoading={props.dishesLoading}\r\n                        errMess={props.dishesErrMess}\r\n                    />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.promotion}\r\n                        isLoading={props.promotionsLoading}\r\n                        errMess={props.promotionsErrMess}                            \r\n                        />\r\n                </div>\r\n                <div className=\"col-12 col-md m-1\">\r\n                    <RenderCard item={props.leader}\r\n                        isLoading={props.leadersLoading}\r\n                        errMess={props.leadersErrMess}\r\n                    />\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport { Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport {baseUrl} from './shared/baseUrl';\r\nimport {Loading } from './LoadingComponent';\r\nimport {Fade,Stagger} from 'react-animation-components';\r\n\r\nfunction RenderLeaders({leaders,isLoading,errMess}){\r\n    if(isLoading){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <Loading />\r\n                </div>\r\n            </div>\r\n        );\r\n    }   \r\n    else if(errMess){\r\n        return(\r\n            <div className=\"container\">\r\n                <div className=\"row\">\r\n                    <h3 className=\"text-danger\">{errMess}</h3>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n    else{\r\n        const leaderslist=leaders.map((leader)=>{\r\n            return (\r\n                <Fade in>\r\n                    <Media tag=\"li\" className=\"m-2\">\r\n                        <Media left top>\r\n                            <Media src={baseUrl+leader.image} alt={leader.name} className=\"mr-2\">\r\n                            </Media>\r\n                        </Media>\r\n                        <Media body className=\"ml-5\">\r\n                            <Media heading>\r\n                                {leader.name}\r\n                            </Media>\r\n                            <Media>\r\n                                <h6>{leader.designation},</h6>\r\n                            </Media>\r\n                            <Media>\r\n                                <p><h5 className=\"font-weight-normal\">{leader.description}</h5></p>\r\n                            </Media>\r\n                        </Media>\r\n                    </Media>\r\n                </Fade>\r\n            );\r\n        });\r\n        return leaderslist;\r\n    }\r\n}\r\n\r\nfunction About(props) {\r\n\r\n    return(\r\n        <div className=\"container\">\r\n            <div className=\"row\">\r\n                <Breadcrumb>\r\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\r\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\r\n                </Breadcrumb>\r\n                <div className=\"col-12 text-center\">\r\n                    <h2>About Us</h2>\r\n                    <hr />\r\n                </div>                \r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12 col-md-6\">\r\n                    <h2>Our History</h2>\r\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\r\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\r\n                </div>\r\n                <div className=\"col-12 col-md-5\">\r\n                    <Card>\r\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\r\n                        <CardBody>\r\n                            <dl className=\"row p-1\">\r\n                                <dt className=\"col-6\">Started</dt>\r\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\r\n                                <dt className=\"col-6\">Major Stake Holder</dt>\r\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\r\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\r\n                                <dd className=\"col-6\">$1,250,375</dd>\r\n                                <dt className=\"col-6\">Employees</dt>\r\n                                <dd className=\"col-6\">40</dd>\r\n                            </dl>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Card>\r\n                        <CardBody className=\"bg-faded\">\r\n                            <blockquote className=\"blockquote\">\r\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\r\n                                    I'm not hungry enough to eat six.</p>\r\n                                <footer className=\"blockquote-footer\">Yogi Berra,\r\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\r\n                                    P. Pepe, Diversion Books, 2014</cite>\r\n                                </footer>\r\n                            </blockquote>\r\n                        </CardBody>\r\n                    </Card>\r\n                </div>\r\n            </div>\r\n            <div className=\"row row-content\">\r\n                <div className=\"col-12\">\r\n                    <h2>Corporate Leadership</h2>\r\n                </div>\r\n                <div className=\"col-12\">\r\n                    <Stagger in>\r\n                        <Media list>\r\n                            <RenderLeaders leaders={props.leaders} \r\n                            isLoading={props.isLoading}\r\n                            errMess={props.errMess}\r\n                            />\r\n                        </Media>\r\n                    </Stagger>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default About;    ","import * as ActionTypes from './ActionTypes';\r\n\r\nexport const initialFeedback={\r\n    firstname: '',\r\n    lastname: '',\r\n    email:'',\r\n    telnum:'',\r\n    agree:false,\r\n    contactType:'Tel.',\r\n    message:''\r\n}\r\n\r\nexport const feedbackForm=(state=initialFeedback,action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.FEEDBACK_POSTED:\r\n            return {};\r\n        case ActionTypes.FEEDBACK_FAILED:\r\n            return action.payload;\r\n        default:\r\n            return state;\r\n    }\r\n}","export const ADD_COMMENT=\"ADD_COMMENT\";\r\n\r\nexport const DISHES_LOADING=\"DISHES_LOADING\";\r\nexport const ADD_DISHES=\"ADD_DISHES\";\r\nexport const DISHES_FAILED=\"DISHES_FAILED\";\r\n\r\nexport const ADD_COMMENTS=\"ADD_COMMENTS\";\r\nexport const COMMENTS_FAILED=\"COMMENTS_FAILED\";\r\n\r\nexport const PROMOS_LOADING=\"PROMOS_LOADING\";\r\nexport const ADD_PROMOS=\"ADD_PROMOS\";\r\nexport const PROMOS_FAILED=\"PROMOS_FAILED\";\r\n\r\nexport const LEADERS_LOADING=\"LEADERS_LOADING\";\r\nexport const ADD_LEADERS=\"ADD_LEADERS\";\r\nexport const LEADERS_FAILED=\"LEADERS_FAILED\";\r\n\r\nexport const FEEDBACK_POSTED=\"FEEDBACK_POSTED\";\r\nexport const FEEDBACK_FAILED=\"FEEDBACK_FAILED\";","import * as ActionTypes from './ActionTypes';\r\nimport {baseUrl} from \"../components/shared/baseUrl\";\r\nimport { feedbackForm } from './feedbackform';\r\n\r\nexport const addComment=(comment)=>{\r\n    return ({\r\n        type: ActionTypes.ADD_COMMENT,\r\n        payload: comment\r\n    });\r\n}\r\n\r\nexport const postComment=(dishId,rating,author,comment)=>(dispatch)=>{\r\n    var newComment={\r\n        dishId: dishId,\r\n        rating: parseInt(rating,10),\r\n        author: author,\r\n        comment: comment\r\n    };\r\n    newComment.date=new Date().toISOString();\r\n\r\n    return fetch(baseUrl+\"comments\",{\r\n        method: 'POST',\r\n        body: JSON.stringify(newComment),\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        },\r\n        credentials: 'same-origin'\r\n    }).then(response=>{\r\n        if(response.ok){\r\n            return response.json();\r\n        }\r\n        else{\r\n            var err=new Error(\"Error \"+response.status+\": \"+response.statusText);\r\n            throw err;\r\n        }\r\n    }, error=>{\r\n        var errMess=new Error(error.message);\r\n        throw errMess;\r\n    }).then(comment=>dispatch(addComment(comment))).catch(err=>{\r\n        console.log(err.message);\r\n        alert(\"Your comment could not be posted.\\nError: \"+err.message);\r\n    });\r\n}\r\n\r\nexport const fetchDishes=()=>(dispatch)=>{\r\n    dispatch(dishesLoading());\r\n\r\n    return fetch(baseUrl+\"dishes\")\r\n    .then(response=>{\r\n        if(response.ok){\r\n            return response.json();\r\n        }\r\n        else{\r\n            var error=new Error('Error'+response.status+\":\"+response.statusText);\r\n            throw error;\r\n        }\r\n    }, error=>{\r\n        var errMess=new Error(error.message);\r\n        throw errMess;\r\n    })\r\n    .then(dishes=>dispatch(addDishes(dishes)))\r\n    .catch(err=>dispatch(dishesFailed(err.message)));\r\n}\r\n\r\nexport const dishesLoading=()=>{\r\n    return ({\r\n        type: ActionTypes.DISHES_LOADING\r\n    });\r\n}\r\n\r\nexport const addDishes=(dishes)=>{\r\n    return ({\r\n        type: ActionTypes.ADD_DISHES,\r\n        payload: dishes\r\n    })\r\n}\r\n\r\nexport const dishesFailed=(errMess)=>{\r\n    return({\r\n        type: ActionTypes.DISHES_FAILED,\r\n        payload: errMess\r\n    })\r\n}\r\n\r\nexport const fetchComments=()=>(dispatch)=>{\r\n\r\n    return fetch(baseUrl+\"comments\")\r\n    .then(response=>{\r\n        if(response.ok){\r\n            return response.json();\r\n        }\r\n        else{\r\n            var error=new Error('Error'+response.status+\":\"+response.statusText);\r\n            throw error;\r\n        }\r\n    }, error=>{\r\n        var errMess=new Error(error.message);\r\n        throw errMess;\r\n    })\r\n    .then(comments=>dispatch(addComments(comments)))\r\n    .catch(err=>dispatch(commentsFailed(err.message)));\r\n}\r\n\r\nexport const addComments=(comments)=>{\r\n    return ({\r\n        type: ActionTypes.ADD_COMMENTS,\r\n        payload: comments\r\n    })\r\n}\r\n\r\nexport const commentsFailed=(errMess)=>{\r\n    return({\r\n        type: ActionTypes.COMMENTS_FAILED,\r\n        payload: errMess\r\n    })\r\n}\r\n\r\nexport const fetchLeaders=()=>(dispatch)=>{\r\n    dispatch(leadersLoading());\r\n\r\n    return fetch(baseUrl+\"leaders\")\r\n    .then(response=>{\r\n        if(response.ok){\r\n            return response.json();\r\n        }\r\n        else{\r\n            var error=new Error('Error'+response.status+\":\"+response.statusText);\r\n            throw error;\r\n        }\r\n    }, error=>{\r\n        var errMess=new Error(error.message);\r\n        throw errMess;\r\n    })\r\n    .then(leaders=>dispatch(addLeaders(leaders)))\r\n    .catch(err=>dispatch(leadersFailed(err.message)));\r\n}\r\n\r\nexport const leadersLoading=()=>{\r\n    return ({\r\n        type: ActionTypes.LEADERS_LOADING\r\n    });\r\n}\r\n\r\nexport const addLeaders=(leaders)=>{\r\n    return ({\r\n        type: ActionTypes.ADD_LEADERS,\r\n        payload: leaders\r\n    })\r\n}\r\n\r\nexport const leadersFailed=(errMess)=>{\r\n    return({\r\n        type: ActionTypes.LEADERS_FAILED,\r\n        payload: errMess\r\n    })\r\n}\r\n\r\nexport const fetchPromos=()=>(dispatch)=>{\r\n    dispatch(promosLoading());\r\n\r\n    return fetch(baseUrl+\"promotions\")\r\n    .then(response=>{\r\n        if(response.ok){\r\n            return response.json();\r\n        }\r\n        else{\r\n            var error=new Error('Error'+response.status+\":\"+response.statusText);\r\n            throw error;\r\n        }\r\n    }, error=>{\r\n        var errMess=new Error(error.message);\r\n        throw errMess;\r\n    })\r\n        .then(promos=>dispatch(addPromos(promos)))\r\n    .catch(err=>dispatch(promosFailed(err.message)));\r\n}\r\n\r\nexport const promosLoading=()=>{\r\n    return ({\r\n        type: ActionTypes.PROMOS_LOADING\r\n    });\r\n}\r\n\r\nexport const addPromos=(promos)=>{\r\n    return ({\r\n        type: ActionTypes.ADD_PROMOS,\r\n        payload: promos\r\n    })\r\n}\r\n\r\nexport const promosFailed=(errMess)=>{\r\n    return({\r\n        type: ActionTypes.PROMOS_FAILED,\r\n        payload: errMess\r\n    })\r\n}\r\n\r\nexport const postFeedback=(feed)=>(dispatch)=>{\r\n    const feedback={...feed};\r\n    feedback.date= new Date().toISOString();\r\n\r\n    return fetch(baseUrl+\"feedback\",{\r\n        method: \"POST\",\r\n        body: JSON.stringify(feedback),\r\n        headers: {\r\n            'Content-Type':'application/json'\r\n        },\r\n        credentials: \"same-origin\"\r\n    }).then(res=>{\r\n        if(res.ok){\r\n            return res;\r\n        }\r\n        else{\r\n            var err=new Error(\"Error \"+res.status+\": \"+res.statusText);\r\n            throw err;            \r\n        }\r\n    },error=>{\r\n        var err=new Error(error.message);\r\n        throw err;\r\n    }).then(res=>res.json()).then(res=>{\r\n        dispatch(feedbackPosted(res));\r\n        alert(JSON.stringify(res));\r\n    }).catch(err=>{\r\n        dispatch(feedbackFailed(err));\r\n        alert(\"Your feedback could not be posted. \"+err.message);\r\n    })\r\n}\r\n\r\nexport const feedbackPosted=(feedback)=>{\r\n    return ({\r\n        type: ActionTypes.FEEDBACK_POSTED,\r\n        payload: feedback\r\n    });\r\n}\r\n\r\nexport const feedbackFailed=(errMess)=>{\r\n    return ({\r\n        type: ActionTypes.LEADERS_FAILED,\r\n        payload: errMess\r\n    });\r\n}","import React, {Component} from 'react';\r\nimport Menu from './MenuComponent';\r\nimport DishDetail from './DishdetailComponent';\r\nimport Header from './HeaderComponent';\r\nimport Footer from './FooterComponent';\r\nimport Contact from './ContactComponent';\r\nimport {Route, Switch, Redirect, withRouter} from 'react-router-dom';\r\nimport Home from './HomeComponent';\r\nimport AboutUs from './AboutComponent';\r\nimport {connect} from 'react-redux';\r\nimport {postComment, fetchDishes,fetchComments, fetchLeaders, fetchPromos,postFeedback} from '../redux/ActionCreator';\r\nimport {actions} from 'react-redux-form';\r\nimport {TransitionGroup,CSSTransition} from 'react-transition-group';\r\n\r\nconst mapStateToProps=(state)=>{\r\n    return ({\r\n        dishes: state.dishes,\r\n        leaders: state.leaders,\r\n        promotions: state.promotions,\r\n        comments: state.comments\r\n    })\r\n}\r\n\r\nconst mapDispatchToProps=(dispatch)=>{\r\n    return({\r\n        postComment: (dishId,rating,author,comment)=> dispatch(postComment(dishId,rating,author,comment)),\r\n        fetchDishes: ()=> dispatch(fetchDishes()),\r\n        resetFeedback: ()=> dispatch(actions.reset('feedback')),\r\n        fetchComments: ()=> dispatch(fetchComments()),\r\n        fetchLeaders: ()=> dispatch(fetchLeaders()),\r\n        fetchPromos: ()=> dispatch(fetchPromos()),\r\n        postFeedback: (feedback)=>dispatch(postFeedback(feedback))\r\n    })\r\n}\r\n\r\nclass Main extends Component {\r\n\r\n    constructor(props){\r\n        super(props);\r\n        this.HomePage=this.HomePage.bind(this);\r\n    }\r\n    \r\n    HomePage(){\r\n        return (<Home \r\n            dish={this.props.dishes.dishes.filter((dish)=> dish.featured)[0]}\r\n            dishesLoading={this.props.dishes.isLoading}\r\n            dishesErrMess={this.props.dishes.errMess}\r\n            leader={this.props.leaders.leaders.filter((leader)=>leader.featured)[0]}\r\n            leadersLoading={this.props.leaders.isLoading}\r\n            leadersErrMess={this.props.leaders.errMess}\r\n            promotion={this.props.promotions.promotions.filter((promo)=>promo.featured)[0]}\r\n            promotionsLoading={this.props.promotions.isLoading}\r\n            promotionsErrMess={this.props.promotions.errMess}\r\n        />);\r\n    };\r\n\r\n    componentDidMount(){\r\n        this.props.fetchDishes();\r\n        this.props.fetchComments();\r\n        this.props.fetchPromos();\r\n        this.props.fetchLeaders();\r\n    }\r\n\r\n    DishWithId=({match})=>{\r\n        return (\r\n            <DishDetail dish={this.props.dishes.dishes.filter(dish=>dish.id===parseInt(match.params.id,10))[0]} \r\n                comments={this.props.comments.comments.filter(comment=>comment.dishId===parseInt(match.params.id,10))}\r\n                isLoading={this.props.dishes.isLoading}\r\n                errMess={this.props.dishes.errMess}\r\n                commentsErrMess={this.props.comments.errMess}\r\n                postComment={this.props.postComment}\r\n            />\r\n        );\r\n    }\r\n\r\n    render(){\r\n        return (\r\n        <div>\r\n            <Header />\r\n            <TransitionGroup>\r\n                <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\r\n                    <Switch location={this.props.location}>\r\n                        <Route path=\"/home\" component={this.HomePage} ></Route>\r\n                        <Route path=\"/contactus\" component={()=><Contact resetFeedback={this.props.resetFeedback}\r\n                            postFeedback={this.props.postFeedback}\r\n                        />}></Route>\r\n                        <Route exact path=\"/menu\" component={()=><Menu dishes={this.props.dishes.dishes}\r\n                            isLoading={this.props.dishes.isLoading}\r\n                            errMess={this.props.dishes.errMess}/>}>                        \r\n                        </Route>\r\n                        <Route path=\"/menu/:id\" component={this.DishWithId}></Route>\r\n                        <Route path=\"/aboutus\" component={()=> <AboutUs leaders={this.props.leaders.leaders} \r\n                            isLoading={this.props.leaders.isLoading}\r\n                            errMess={this.props.leaders.errMess}\r\n                            />}>                    \r\n                        </Route>\r\n                        <Redirect to=\"/home\"></Redirect>\r\n                    </Switch>\r\n                </CSSTransition>\r\n            </TransitionGroup>\r\n            <Footer />\r\n        </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default withRouter(connect(mapStateToProps,mapDispatchToProps)(Main));\r\n","import * as ActionTypes from \"./ActionTypes\";\r\nconst initialState={\r\n    isLoading: true,\r\n    errMess: null,\r\n    dishes: []\r\n}\r\n\r\nexport const Dishes=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.DISHES_LOADING:\r\n            return ({...state,isLoading:true,errMess:null,dishes:[]});\r\n        case ActionTypes.DISHES_FAILED:\r\n            return ({...state,isLoading:false,errMess:action.payload,dishes:[]});\r\n        case ActionTypes.ADD_DISHES:\r\n            return ({...state,isLoading:false,errMess:null,dishes:action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst initialState={\r\n    isLoading: true,\r\n    errMess: null,\r\n    leaders: []\r\n}\r\n\r\nexport const Leaders=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.LEADERS_LOADING:\r\n            return ({...state,isLoading:true,errMess:null,leaders:[]});\r\n        case ActionTypes.LEADERS_FAILED:\r\n            return ({...state,isLoading:false,errMess:action.payload,leaders:[]});\r\n        case ActionTypes.ADD_LEADERS:\r\n            return ({...state,isLoading:false,errMess:null,leaders:action.payload});\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from \"./ActionTypes\";\r\n\r\nconst initialState={\r\n    errMess: null,\r\n    comments: []\r\n}\r\n\r\nexport const Comments=(state=initialState,action)=>{\r\n    switch(action.type){\r\n        case ActionTypes.COMMENTS_FAILED:\r\n            return ({...state,errMess:action.payload,comments:[]});\r\n        case ActionTypes.ADD_COMMENTS:\r\n            return ({...state,errMess:null,comments:action.payload});\r\n        case ActionTypes.ADD_COMMENT:\r\n            const comment=action.payload;\r\n            return {...state,comments: state.comments.concat(comment)};\r\n        default:\r\n            return state;\r\n    }\r\n}","import * as ActionTypes from './ActionTypes';\r\n\r\nconst initialState=  { isLoading: true,\r\n    errMess: null,\r\n    promotions:[]};\r\n\r\nexport const Promotions = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ActionTypes.ADD_PROMOS:\r\n        return {...state, isLoading: false, errMess: null, promotions: action.payload};\r\n\r\n        case ActionTypes.PROMOS_LOADING:\r\n            return {...state, isLoading: true, errMess: null, promotions: []}\r\n\r\n        case ActionTypes.PROMOS_FAILED:\r\n            return {...state, isLoading: false, errMess: action.payload};\r\n\r\n        default:\r\n          return state;\r\n      }\r\n};","import React, {Component} from 'react';\nimport './App.css';\nimport Main from './components/MainComponent.js';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport {BrowserRouter} from 'react-router-dom';\nimport {Provider} from 'react-redux';\nimport {ConfigureStore} from './redux/configureStore';\n\nconst store= ConfigureStore();\nclass App extends Component {\n  render(){\n    return (\n      <Provider store={store}>\n        <BrowserRouter>\n          <div>\n              <Main />\n          </div>\n        </BrowserRouter>\n      </Provider>\n    );\n  }\n}\n\nexport default App;\n","import {createStore,combineReducers,applyMiddleware} from 'redux';\r\nimport {Dishes} from './dishes';\r\nimport {Leaders} from './leaders';\r\nimport {Comments} from './comments';\r\nimport {Promotions} from './promotions';\r\nimport {createForms} from 'react-redux-form';\r\nimport thunk from 'redux-thunk';\r\nimport logger from 'redux-logger';\r\nimport {initialFeedback} from './forms'\r\nimport {feedbackForm} from './feedbackform';\r\n\r\nexport const ConfigureStore=()=>{\r\n    const store= createStore(combineReducers({\r\n        dishes: Dishes,\r\n        promotions: Promotions,\r\n        leaders: Leaders,\r\n        comments: Comments,\r\n        ...createForms({\r\n            feedback: feedbackForm\r\n        })\r\n    }),applyMiddleware(thunk,logger));\r\n    return store;\r\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />    \n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}